@model GR_Calcul.Models.SlotRange   

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script type="text/javascript">

    //TODO we might want to change this
    //Date.format = "mm/dd/yyyy";
    Date.format = "dd/mm/yyyy";

    $(function () {

        $(".wizard-step:first").fadeIn(); // show first step


        // attach backStep button handler
        // hide on first step
        $("#back-step").hide().click(function () {
            var $step = $(".wizard-step:visible"); // get current step
            if ($step.prev().hasClass("wizard-step")) { // is there any previous step?
                $step.hide().prev().fadeIn();  // show it and hide current step

                // disable backstep button?
                if (!$step.prev().prev().hasClass("wizard-step")) {
                    $("#back-step").hide();
                }

            }
        });

        $("#back-step").click(function () {
            var $step = $(".wizard-step:visible");
            if ($step.next().hasClass("wizard-step")) {
                $("#next-step").val("suivant");
            }
        });

        // attach nextStep button handler       
        $("#next-step").click(function () {

            var $step = $(".wizard-step:visible"); // get current step

            // enhance wizard by preventing user from navigating to next step if there are errors in validation
            var validator = $("form").validate(); // obtain validator
            var anyError = false;
            $step.find("input").each(function () {
                /*
                * There are a few things I do not want jquery to validate such as all the checkboxes because it won't be able to find a validator for them.
                * Also the slot times should not be validated, etc.
                */
                var attr = $(this).attr('novalidation');
                //if the element has the 'novalidation' attribute then exit from here
                if (typeof attr !== 'undefined' && attr !== false) {
                    return;
                }

                if (!validator.element(this)) { // validate every input element inside this step
                    anyError = true;
                }

            });

            if (anyError)
                return false; // exit if any error found
            if (!$step.next().next().hasClass("wizard-step")) {
                $("#next-step").val("terminer");
            }
            if (!$step.next().next().hasClass("wizard-step") && $step.next().hasClass("wizard-step")) {
                createLastStep();
            }
            if ($step.next().hasClass("wizard-step")) { // is there any next step?
                $step.hide().next().fadeIn();  // show it and hide current step
                $("#back-step").show();   // recall to show backStep button
            } else { // this is last step, submit form
                $("form").submit();
            }
        });

    });

    $(document).ready(function () {
        //TODO remove this
        //$("input").rules("remove");

        $(".roomBox").click(function () {
            var checked_status = this.checked;
            var lookUpId = "inroom-" + this.id;
            $("input[room=" + lookUpId + "]").each(function () {
                this.checked = checked_status;
            });
        });
    });

    function createLastStep() {
        //build slot selection view
        var duration = $("#SlotDuration").val()
        var cols = 24 / duration;
        var nslots = $("#NumberOfSlots").val();
        var rows = Math.ceil(nslots / cols);
        var nOnLastRow = cols - (rows * cols - nslots);
        var startDate = $("#Beginning").val();
        //header
        var html = "<thead><tr><th style='text-align:center;'>&nbsp;</th>";
        for (var i = 0; i < cols; i++) {
            html += "<th colspan='2'>Slot</th>";
        }
        html += "</tr>";
        html += "<tr class='subTitle'>";
        html += "<th><button type=\"button\">Copier première ligne</button></th>";
        for (var i = 0; i < cols; i++) {
            html += "<th>Heure début</th><th>Heure fin</th>";
        }
        html += "</tr></thead>";
        //body
        html += "<tbody>";
        var currentDate = new Date(startDate);
        //alert("currentDate:" + currentDate + ";startDate:" + startDate.asString());
        for (var i = 0; i < rows; i++) {
            html += "<tr>";
            html += "<td><input novalidation=\"true\" type=\"text\" class=\"date\" name=\"Slotdate\" value=\"" + currentDate.asString() + "\" size=\"8\" /><a href=\"#\" class=\"delete delRow\"></a></td>";
            var max = (i == rows - 1 ? nOnLastRow : cols);

            for (var j = 0; j < max; j++) {
                var dura = j * duration;
                var dura2 = (j + 1) * duration;

                var min = ":00";
                var min2 = ":00";
                if (dura == 24) {
                    //this shouldn't happen in theory
                    dura = 23;
                    min = ":59";
                }
                if (dura2 == 24) {
                    dura2 = 23;
                    min2 = ":59";
                }

                html += "<td><input novalidation=\"true\" type=\"text\" value=\"" + dura + ""+min+"\" name=\"Startz\" size=\"4\" /></td>";
                html += "<td><input novalidation=\"true\" type=\"text\" value=\"" + dura2 + ""+min2+"\" name=\"Endz\" size=\"4\" /></td>";
            }
            currentDate.addDays(1);
            html += "</tr>";
        }


        html += "</tbody>";
        html += "<tfoot><tr><td colspan=\"7\"><button type=\"button\">+</button></td></tr></tfoot>";

        //clear current table content otherwise we might be appending the content several times
        $("#slotTable").html("");
        $("#slotTable").append(html);

        //load datepickers
        reloadDatePickers();
    }

</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <!-- <legend>SlotRangeModels</legend> -->
        <div class="wizard-step">
            <h3>Étape 1: informations sur la plage de créneaux</h3>
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.StartRes)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.StartRes)
                @Html.ValidationMessageFor(model => model.StartRes)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.EndRes)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EndRes)
                @Html.ValidationMessageFor(model => model.EndRes)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IdCourse)
            </div>
            <div class="editor-field">
                @Html.DropDownList("IdCourse")
                @Html.ValidationMessageFor(model => model.IdCourse)
            </div>

            <div class="editor-label">
                <label>Machines</label>
            </div>
            <div>&nbsp;</div>
            <div class="editor-field">
                <ul class="machines">
                    @foreach (var room in new GR_Calcul.Models.RoomModel().ListRooms())
                    {
						<li><input novalidation="true" type="checkbox" id="room-@room.ID" class="roomBox" title="select all machines in room @room.Name" /><label for="@room.ID">@room.Name</label>
                            <ul>
                                @foreach (var machine in new GR_Calcul.Models.MachineModel().ListMachines(@room.ID))
                                {
                                    <li><input novalidation="true" type="checkbox" id="machine-@machine.id_machine" value="@machine.id_machine" name="Machines" room="inroom-room-@room.ID" /><label for="@machine.id_machine">@machine.Name</label></li>
                                }
							</ul>
						</li>
                    }
                </ul>
            </div>
        </div>

        <div class="wizard-step">
            <h3>Étape 2: définition des créneaux</h3>

            <div class="editor-label">
                @Html.LabelFor(model => model.Beginning)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Beginning)
                @Html.ValidationMessageFor(model => model.Beginning)
            </div>
            
            <div class="editor-label">
                @Html.LabelFor(model => model.SlotDuration)
            </div>
            <div class="editor-field">    
                @Html.DropDownList("SlotDuration")
                @Html.ValidationMessageFor(model => model.SlotDuration)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.NumberOfSlots)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.NumberOfSlots)
                @Html.ValidationMessageFor(model => model.NumberOfSlots)
            </div>
        </div>

        <div class="wizard-step">
            <h3>Étape 3: choix des créneaux</h3>
            <table class="simpleTable" id="slotTable">
                
            </table>
        </div>

        <p>
            <input type="button" id="back-step" name="back-step" value="Précédent" />
            <input type="button" id="next-step" name="next-step" value="Suivant" />
        </p>
    </fieldset>
}


