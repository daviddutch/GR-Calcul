@model GR_Calcul.Models.SlotRange
<script src="@Url.Content("~/Scripts/wizard.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Modifier une plage de créneau";
}

<h2>@ViewBag.Title</h2>

<script type="text/javascript">
    enableWizard(false);
    enableRoomBoxes();
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
       @{
if (ViewData["Error"] != null)
{
                <p style="color:Red">@ViewData["Error"]</p>
}
        }

        <div class="wizard-step">
            <h3>Étape 1: informations sur la plage de créneaux</h3>
            @Html.EditorFor(model => model.Timestamp)
            @Html.EditorFor(model => model.id_slotRange)
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
            @if (Model.locked)
            {                
                @Html.DisplayFor(model => model.Name)
            }
            else
            {
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            }
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.StartRes)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.StartRes)
                @Html.ValidationMessageFor(model => model.StartRes)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.EndRes)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EndRes)
                @Html.ValidationMessageFor(model => model.EndRes)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IdCourse)
            </div>
            <div class="editor-field">
             @if (Model.locked)
            {                 
                @Html.HiddenFor(model => Model.IdCourse)
@*                @Html.DropDownList("IdCourse")
*@            }
            else
            {
                @Html.DropDownList("IdCourse")
                @Html.ValidationMessageFor(model => model.IdCourse)
            }

            </div>

            <div class="editor-label">
                <label>Machines</label>
            </div>
            <div>&nbsp;</div>
            <div class="editor-field">
                <ul class="machines">
                    @foreach (var room in new GR_Calcul.Models.RoomModel().ListRooms())
                    {
                        var isDisabled = "";
                        if (Model.locked)
                        {
                            isDisabled += "disabled='disabled'";
                        }              
						<li><input novalidation="true" type="checkbox" id="room-@room.ID" class="roomBox" title="select all machines in room @room.Name" @isDisabled /><label for="@room.ID">@room.Name</label>
                            <ul>
                                @foreach (var machine in GR_Calcul.Models.MachineModel.ListMachines(@room.ID))
                                {
                                    var isChecked = "";
                                    isDisabled = "";
                                    if (Model != null)
                                    {
                                        if (Model.Machines.Contains(machine))
                                        {
                                            isChecked = "checked='checked'";
                                        }
                                        if (Model.locked)
                                        {
                                            isDisabled = "disabled='disabled'";
                                        }
                                    }
                                    <li><input novalidation="true" type="checkbox" id="machine-@machine.id_machine" value="@machine.id_machine" name="Machines" room="inroom-room-@room.ID" @isChecked @isDisabled /><label for="@machine.id_machine">@machine.Name</label></li>
                                }
							</ul>
						</li>
                    }
                </ul>
            </div>
        </div>

        <div class="wizard-step">
            <h3>Étape 2: choix des créneaux</h3>
            <table class="simpleTable" id="slotTable">
                @{
                    int cols = Model.getNumberOfSlotCols();               
                }
                    <thead>
				    <tr style="text-align:center;">
					    <th colspan="2">&nbsp;</th>
                        @for (int i = 0; i < cols; i++)
                        {
    					    <th colspan="2">Slot</th>
                        }
				    </tr>
				    <tr class="subTitle">
                        <th colspan="2">&nbsp;</th>
                        @for (int i = 0; i < cols; i++)
                        {
					        <th>Heure début</th>
					        <th>Heure fin</th>
                        }
				    </tr>
			    </thead>
                <tbody id="slotBody">
                    @for (int i = 0; i < Model.Slotdate.Count; i++)
                    {
                        DateTime date = Model.Slotdate[i];
                        string id = "slotRow" + i;
                        string value = String.Format("{0:dd.MM.yyyy}", date);
                        
                        <tr id="@id" class="slotRow">
                            <td colspan="2"><input novalidation="true" type="text" class="lollipop Slotdate" name="Slotdate" id="Slotdate" value="@value" size="8" /><a href="javascript:deleteRow('@id');" class="delete delRow"></a></td>
                            @foreach (var slot in Model.GetSlotsForDate(date))
                            {
                                int startHour = slot.Start.Hour;
                                int startMinute = slot.Start.Minute;
                                int endHour = slot.End.Hour;
                                int endMinute = slot.End.Minute;
                                string start = startHour + ":" + startMinute;
                                string end = endHour + ":" + endMinute;
                                
                                <td><input novalidation="true" type="text" value="@start" name="Startz" size="4" /></td>
                                <td><input novalidation="true" type="text" value="@end" name="Endz" size="4" /></td>
                                
                            }
                        </tr>
                    }
                </tbody>
                <tfoot><tr><td colspan="7"><button type="button" onclick="addRow()">+</button></td></tr></tfoot>
            </table>
        </div>

        <p>
            <input type="button" id="back-step" name="back-step" value="Précédent" />
            <input type="button" id="next-step" name="next-step" value="Suivant" />
        </p>
    </fieldset>
}

